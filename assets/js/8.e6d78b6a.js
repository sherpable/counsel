(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{212:function(t,e,r){"use strict";r.r(e);var a=r(0),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"introduction"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),r("h2",{attrs:{id:"what-is-counsel"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#what-is-counsel"}},[t._v("#")]),t._v(" What is Counsel?")]),t._v(" "),r("p",[t._v('Counsel is an elegant testing framework for JavaScript and Vue.js without using "callback testing style" like many other JavaScript testing frameworks do. It\'s more like '),r("a",{attrs:{href:"https://phpunit.de/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PHPUnit"),r("OutboundLink")],1),t._v(".")]),t._v(" "),r("h2",{attrs:{id:"why-counsel"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#why-counsel"}},[t._v("#")]),t._v(" Why Counsel?")]),t._v(" "),r("p",[t._v("From origin I am a php developer and realy love using "),r("a",{attrs:{href:"https://phpunit.de/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PHPUnit"),r("OutboundLink")],1),t._v('. I like the way PHPUnit let you create a "test" class that\'s sort of connected with a "source" class. Also using the methods from a test class as tests who will be executed is something I love. The test methods will give you a nice overview about the features from a "source" class. Especially when using an IDE.')]),t._v(" "),r("p",[t._v("There are many other JavaScript testing frameworks like: "),r("a",{attrs:{href:"https://jasmine.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("jasmine"),r("OutboundLink")],1),t._v(", "),r("a",{attrs:{href:"https://mochajs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("mocha"),r("OutboundLink")],1),t._v(", "),r("a",{attrs:{href:"https://ava.li/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ava"),r("OutboundLink")],1),t._v(" or "),r("a",{attrs:{href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("jest"),r("OutboundLink")],1),t._v(". All those frameworks are using a callback approach to write tests, which you may like or not. Counsel will take a different approach, it's more like PHPUnit. So let's "),r("router-link",{attrs:{to:"/guide/getting-started.html"}},[t._v("get started")]),t._v(".")],1)])}),[],!1,null,null,null);e.default=s.exports}}]);