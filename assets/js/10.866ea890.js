(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{220:function(e,s,a){"use strict";a.r(s);var t=a(0),r=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"assertions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assertions"}},[e._v("#")]),e._v(" Assertions")]),e._v(" "),a("p",[e._v("Counsel create a global "),a("code",[e._v("Assertions")]),e._v(" object that will contains all available assertions. The "),a("code",[e._v("TestCase")]),e._v(" class your tests will extend also delegate calls like "),a("code",[e._v("this.assertEquals('bar', 'bar')")]),e._v(" to the "),a("code",[e._v("Assertions")]),e._v(" class.")]),e._v(" "),a("h2",{attrs:{id:"all-available-assertions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#all-available-assertions"}},[e._v("#")]),e._v(" All available assertions")]),e._v(" "),a("h3",{attrs:{id:"asserttrue-actual-message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#asserttrue-actual-message"}},[e._v("#")]),e._v(" assertTrue(actual, message)")]),e._v(" "),a("h3",{attrs:{id:"assertfalse-actual-message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assertfalse-actual-message"}},[e._v("#")]),e._v(" assertFalse(actual, message)")]),e._v(" "),a("h3",{attrs:{id:"assertequals-expected-actual-message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assertequals-expected-actual-message"}},[e._v("#")]),e._v(" assertEquals(expected, actual, message)")]),e._v(" "),a("h3",{attrs:{id:"assertnotequals-expected-actual-message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assertnotequals-expected-actual-message"}},[e._v("#")]),e._v(" assertNotEquals(expected, actual, message)")]),e._v(" "),a("h3",{attrs:{id:"assertcount-expected-countable-message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assertcount-expected-countable-message"}},[e._v("#")]),e._v(" assertCount(expected, countable, message)")]),e._v(" "),a("h3",{attrs:{id:"assertcontains-regex-contents-message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assertcontains-regex-contents-message"}},[e._v("#")]),e._v(" assertContains(regex, contents, message)")]),e._v(" "),a("h3",{attrs:{id:"assertnotcontains-regex-contents-message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assertnotcontains-regex-contents-message"}},[e._v("#")]),e._v(" assertNotContains(regex, contents, message)")]),e._v(" "),a("h3",{attrs:{id:"expectexception-exception-exceptionmessage-failuremessage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expectexception-exception-exceptionmessage-failuremessage"}},[e._v("#")]),e._v(" expectException(exception, exceptionMessage, failureMessage)")]),e._v(" "),a("h3",{attrs:{id:"notexpectexception-exception-failuremessage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notexpectexception-exception-failuremessage"}},[e._v("#")]),e._v(" notExpectException(exception, failureMessage)")])])}),[],!1,null,null,null);s.default=r.exports}}]);